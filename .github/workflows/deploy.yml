name: Deploy Application to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v3

    - name: Install SSH Client on Runner
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Deploy Application via SSH
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
        PROJECT_PATH="Allnewsmr-API"
        IMAGE_NAME="allnewsmr-api"
        CONTAINER_NAME="allnewsmr-api"
        PORT=3000

        if [ ! -d "$PROJECT_PATH/" ]; then
          git clone https://github.com/SheikhElMoctarG/Allnewsmr-API.git 
        else
          cd $PROJECT_PATH
          git pull origin main
        fi
        docker build -t $IMAGE_NAME .
        if [ $(docker ps -a -q -f name=$CONTAINER_NAME) ]; then
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
        fi
        if sudo lsof -i :$PORT | grep LISTEN; then
          echo "Port $PORT is in use. Stopping and removing the previous container."
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          echo "Removed container $CONTAINER_NAME."
        fi
        echo "All prompts completed. Starting the container."
        if [ -z "$PORT" ]; then
          echo "Host port is empty. Binding only the container port."
          docker run -d --name $CONTAINER_NAME $IMAGE_NAME
        else
          echo "Using host port $PORT and container port $PORT."
          docker run -d --name $CONTAINER_NAME -p $PORT:$PORT $IMAGE_NAME
        fi
        echo "Container started successfully."
        exit 0
        EOF
